name: mosquitto

services:

  mosquitto:
    image: eclipse-mosquitto:${MOSQUITTO_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-main-hc
    volumes:
      - ${PROJECT_CONF_DIR:-${CONF_DIR:-/etc}/${COMPOSE_PROJECT_NAME}}:/mosquitto/config
      - ${PROJECT_DATA_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}}:/mosquitto/data
      - ${PROJECT_LOGS_DIR:-${LOGS_DIR:-/var/log}/${COMPOSE_PROJECT_NAME}}:/mosquitto/log
    networks:
      default:
      proxy:
      mqtt:
        aliases:
          - mqtt
          - ${COMPOSE_PROJECT_NAME}
    healthcheck:
      test: "(ps -o comm | grep -q -m 1 mosquitto) || exit 1"
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}.entrypoints=mqtt"
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=1883"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-ws.rule=HostSNI(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose domain is not defined}`) || HostSNI(`mqtt.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-ws.tls=true"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-ws.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-ws.service=${COMPOSE_PROJECT_NAME}-ws"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-ws.entrypoints=mqtt-ws"
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}-ws.loadbalancer.server.port=8883"

  mosquitto-exporter:
    image: sapcc/mosquitto-exporter:${MOSQUITTO_EXPORTER_VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}-exporter
    extends:
      file: ../fragments/services.yml
      service: service
    networks:
      - default
      - monitoring
      - proxy
    environment:
      - MQTT_USER=${MOSQUITTO_EXPORTER_USER}
      - MQTT_PASS=${MOSQUITTO_EXPORTER_PASS}
      - BROKER_ENDPOINT=${MOSQUITTO_ENDPOINT:-tcp://mosquitto:1883}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-exporter.rule=Host(`${COMPOSE_PROJECT_NAME}-exporter.${COMPOSE_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-exporter.service=${COMPOSE_PROJECT_NAME}-exporter"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-exporter.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-exporter.loadbalancer.server.port=9234"

  mqtt-blackbox-exporter:
    container_name: mqtt-blackbox-exporter
    image: inovex/mqtt_blackbox_exporter:${MQTT_BLACKBOX_EXPORTER_VERSION:-v0.7.0}
    command: -config.file /data/config.yaml
    networks:
      - default
      - monitoring
      - proxy
    volumes:
      - /srv/mqtt-blackbox-exporter:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mqtt-blackbox-exporter.rule=Host(`mqtt-blackbox-exporter.${COMPOSE_DOMAIN}`)"
      - "traefik.http.routers.mqtt-blackbox-exporter.tls=true"
      - "traefik.http.routers.mqtt-blackbox-exporter.tls.certresolver=acme-ovh-dns"
      - "traefik.http.routers.mqtt-blackbox-exporter.service=mqtt-blackbox-exporter"
      - "traefik.http.routers.mqtt-blackbox-exporter.entrypoints=http,https"
      - "traefik.http.services.mqtt-blackbox-exporter.loadbalancer.server.port=9214"

networks:
  default:
    internal: true
  monitoring:
    external: true
  proxy:
    external: true
  mqtt:
    external: true

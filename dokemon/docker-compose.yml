version: '3.9'
name: dokemon
# Dokémon stack

# Dokémon
#
# Page: https://dokemon.dev/
# Repo: https://github.com/productiveops/dokemon
# Dckr: https://hub.docker.com/r/productiveops/dokemon
# Cmps: https://github.com/productiveops/dokemon#using-traefik-with-letsencrypt-ssl-certificate
#
# An open source tool that lets organizations & individuals archive both public
# & private web content while retaining control over their data. It can be used
# to save copies of bookmarks, preserve evidence for legal cases, backup photos
# from FB/Insta/Flickr or media from YT/Soundcloud/etc., save research papers,
# and more...

services:

  dokemon:
    container_name: ${COMPOSE_PROJECT_NAME}
    image: productiveops/dokemon:${DOKEMON_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/docker/stacks:/var/docker/stacks
    networks:
      - exposed
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose FQDN missing}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=9090"

networks:
  exposed:
    external: true
  proxy:
    external: true

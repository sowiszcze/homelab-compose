name: ${STACK_NAME:-penpot}

include:
  - ../fragments/network-default.yml
  - ../fragments/network-outgoing.yml
  - ../fragments/network-proxy.yml
  - ../fragments/network-s3.yml
  - ../fragments/network-smtp.yml

services:

  frontend:
    container_name: ${COMPOSE_PROJECT_NAME}-frontend
    image: penpotapp/frontend:${PENPOT_FRONTEND_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-main-web-glb-hc
    volumes:
      - &assets-dir ${ASSETS_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}/assets}:/opt/data/assets
    depends_on:
      backend:
        condition: service_healthy
      exporter:
        condition: service_healthy
    healthcheck:
      test: "(curl --fail --silent http://localhost:8080/ > /dev/null) || exit 1"
    networks:
      - default
    environment:
      PENPOT_FLAGS: ${PENPOT_FRONT_FLAGS:-enable-registration enable-login-with-password}
      PENPOT_BACKEND_URI: http://${COMPOSE_PROJECT_NAME}-backend:6060
      PENPOT_EXPORTER_URI: http://${COMPOSE_PROJECT_NAME}-exporter:6061
      PENPOT_HTTP_SERVER_MAX_BODY_SIZE: 31457280
    labels:
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8080"

  backend:
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    image: penpotapp/backend:${PENPOT_BACKEND_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-sub-hc
    volumes:
      - *assets-dir
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    healthcheck:
      test: "(curl --fail --silent http://localhost:6060/ > /dev/null) || exit 1"
    networks:
      - outgoing
      - smtp
      - s3
    environment:
      - PENPOT_FLAGS=${PENPOT_BACK_FLAGS:-enable-registration enable-login-with-password disable-email-verification enable-smtp enable-prepl-server}
      - PENPOT_SECRET_KEY=${PENPOT_SECRET:?Penpot secret not set}
      - PENPOT_PREPL_HOST=${PENPOT_PREPL_IP:-0.0.0.0}
      - PENPOT_PUBLIC_URI=https://${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN}
      - PENPOT_DATABASE_URI=postgresql://${COMPOSE_PROJECT_NAME}-db/${DB_NAME:-penpot}
      - PENPOT_DATABASE_USERNAME=${DB_USER:-penpot}
      - PENPOT_DATABASE_PASSWORD=${DB_PASS:-penpot}
      - PENPOT_REDIS_URI=${PENPOT_REDIS_ADDR:-redis://${COMPOSE_PROJECT_NAME}-kv/0}
      - PENPOT_ASSETS_STORAGE_BACKEND=${PENPOT_STORAGE:-assets-fs}
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - PENPOT_STORAGE_ASSETS_S3_ENDPOINT
      - PENPOT_STORAGE_ASSETS_S3_BUCKET
      - PENPOT_TELEMETRY_ENABLED=false
      - PENPOT_SMTP_DEFAULT_FROM
      - PENPOT_SMTP_DEFAULT_REPLY_TO
      - PENPOT_SMTP_HOST
      - PENPOT_SMTP_PORT
      - PENPOT_SMTP_USERNAME
      - PENPOT_SMTP_PASSWORD
      - PENPOT_SMTP_TLS
      - PENPOT_SMTP_SSL
      - PENPOT_OIDC_CLIENT_ID
      - PENPOT_OIDC_BASE_URI
      - PENPOT_OIDC_CLIENT_SECRET
      - PENPOT_OIDC_AUTH_URI
      - PENPOT_OIDC_TOKEN_URI
      - PENPOT_OIDC_USER_URI
      - PENPOT_OIDC_ROLES
      - PENPOT_OIDC_ROLES_ATTR
      - PENPOT_OIDC_SCOPES
      - PENPOT_OIDC_NAME_ATTR
      - PENPOT_OIDC_EMAIL_ATTR

  exporter:
    container_name: ${COMPOSE_PROJECT_NAME}-exporter
    image: penpotapp/exporter:${PENPOT_EXPORTER_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-sub-hc
    depends_on:
      valkey:
        condition: service_healthy
    healthcheck:
      test: "(curl --fail --silent http://localhost:6061/ > /dev/null) || exit 1"
    environment:
      - PENPOT_PUBLIC_URI=http://${COMPOSE_PROJECT_NAME}-frontend:8080
      - PENPOT_REDIS_URI=${PENPOT_REDIS_ADDR:-redis://${COMPOSE_PROJECT_NAME}-kv/0}

  postgres:
    extends:
      file: ../fragments/services.yml
      service: postgres

  valkey:
    extends:
      file: ../fragments/services.yml
      service: valkey-ephemeral

name: penpot

services:

  frontend:
    container_name: ${COMPOSE_PROJECT_NAME}-frontend
    image: penpotapp/frontend:${PENPOT_FRONTEND_TAG:-latest}
    restart: unless-stopped
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/assets:/opt/data/assets
    depends_on:
      - backend
      - exporter
    networks:
      - default
      - proxy
    environment:
      - PENPOT_FLAGS=${PENPOT_FRONT_FLAGS:-enable-registration enable-login-with-password}
      - PENPOT_BACKEND_URI=http://${COMPOSE_PROJECT_NAME}-backend:6060
      - PENPOT_EXPORTER_URI=http://${COMPOSE_PROJECT_NAME}-exporter:6061
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose FQDN missing}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"

  backend:
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    image: penpotapp/backend:${PENPOT_BACKEND_TAG:-latest}
    restart: unless-stopped
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/assets:/opt/data/assets
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    networks:
      - default
      - exposed
      - smtp
      - s3
    environment:
      - PENPOT_FLAGS=${PENPOT_BACK_FLAGS:-enable-registration enable-login-with-password disable-email-verification enable-smtp enable-prepl-server}
      - PENPOT_SECRET_KEY=${PENPOT_SECRET:?Penpot secret not set}
      - PENPOT_PREPL_HOST=${PENPOT_PREPL_IP:-0.0.0.0}
      - PENPOT_PUBLIC_URI=https://${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN}
      - PENPOT_DATABASE_URI=postgresql://${COMPOSE_PROJECT_NAME}-db/${PENPOT_DB_NAME:-penpot}
      - PENPOT_DATABASE_USERNAME=${PENPOT_DB_USER:-penpot}
      - PENPOT_DATABASE_PASSWORD=${PENPOT_DB_PASS:-penpot}
      - PENPOT_REDIS_URI=${PENPOT_REDIS_ADDR:-redis://${COMPOSE_PROJECT_NAME}-kv/0}
      - PENPOT_ASSETS_STORAGE_BACKEND=${PENPOT_STORAGE:-assets-fs}
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - PENPOT_STORAGE_ASSETS_S3_ENDPOINT
      - PENPOT_STORAGE_ASSETS_S3_BUCKET
      - PENPOT_TELEMETRY_ENABLED=false
      - PENPOT_SMTP_DEFAULT_FROM
      - PENPOT_SMTP_DEFAULT_REPLY_TO
      - PENPOT_SMTP_HOST
      - PENPOT_SMTP_PORT
      - PENPOT_SMTP_USERNAME
      - PENPOT_SMTP_PASSWORD
      - PENPOT_SMTP_TLS
      - PENPOT_SMTP_SSL
      - PENPOT_OIDC_CLIENT_ID
      - PENPOT_OIDC_BASE_URI
      - PENPOT_OIDC_CLIENT_SECRET
      - PENPOT_OIDC_AUTH_URI
      - PENPOT_OIDC_TOKEN_URI
      - PENPOT_OIDC_USER_URI
      - PENPOT_OIDC_ROLES
      - PENPOT_OIDC_ROLES_ATTR
      - PENPOT_OIDC_SCOPES
      - PENPOT_OIDC_NAME_ATTR
      - PENPOT_OIDC_EMAIL_ATTR

  exporter:
    container_name: ${COMPOSE_PROJECT_NAME}-exporter
    image: penpotapp/exporter:${PENPOT_EXPORTER_TAG:-latest}
    restart: unless-stopped
    networks:
      - default
    environment:
      - PENPOT_PUBLIC_URI=http://${COMPOSE_PROJECT_NAME}-frontend
      - PENPOT_REDIS_URI=${PENPOT_REDIS_ADDR:-redis://${COMPOSE_PROJECT_NAME}-kv/0}

  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres:${PENPOT_DB_TAG:-15}
    restart: unless-stopped
    stop_signal: SIGINT
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/postgres:/var/lib/postgresql/data
    networks:
      - default
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums
      - POSTGRES_DB=${PENPOT_DB_NAME:-penpot}
      - POSTGRES_USER=${PENPOT_DB_USER:-penpot}
      - POSTGRES_PASSWORD=${PENPOT_DB_PASS:-penpot}

  valkey:
    container_name: ${COMPOSE_PROJECT_NAME}-kv
    image: valkey/valkey:${PENPOT_KV_TAG:-alpine}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - default

networks:
  default:
  exposed:
    external: true
  proxy:
    external: true
  smtp:
    external: true
  s3:
    external: true

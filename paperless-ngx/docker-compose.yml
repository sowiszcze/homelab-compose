name: paperless-ngx

services:

  paperless-broker:
    container_name: ${COMPOSE_PROJECT_NAME}-broker
    image: valkey/valkey:${PAPERLESS_KV_TAG:-alpine}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - default

  paperless-db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: docker.io/library/postgres:${PAPERLESS_POSTGRES_TAG:-15}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/pg:/var/lib/postgresql/data
    networks:
      - default
    environment:
      POSTGRES_DB: ${PAPERLESS_POSTGRES_DB:-paperless}
      POSTGRES_USER: ${PAPERLESS_POSTGRES_USER:-paperless}
      POSTGRES_PASSWORD: ${PAPERLESS_POSTGRES_PASS:-paperless}

  paperless:
    container_name: ${COMPOSE_PROJECT_NAME}
    image: ghcr.io/paperless-ngx/paperless-ngx:${PAPERLESS_TAG:-latest}
    restart: unless-stopped
    depends_on:
      paperless-db:
        condition: service_healthy
      paperless-broker:
        condition: service_healthy
      paperless-gotenberg:
        condition: service_started
      paperless-tika:
        condition: service_started
    networks:
      - default
      - proxy
      - exposed
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/data:/usr/src/paperless/data
      - /srv/${COMPOSE_PROJECT_NAME}/media:/usr/src/paperless/media
      - /srv/${COMPOSE_PROJECT_NAME}/export:/usr/src/paperless/export
      - /srv/${COMPOSE_PROJECT_NAME}/consume:/usr/src/paperless/consume
    env_file: stack.env
    environment:
      PAPERLESS_REDIS: redis://${COMPOSE_PROJECT_NAME}-broker:6379
      PAPERLESS_DBHOST: ${COMPOSE_PROJECT_NAME}-db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://${COMPOSE_PROJECT_NAME}-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://${COMPOSE_PROJECT_NAME}-tika:9998
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose FQDN missing}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=${AUTH_MIDDLEWARE:?Auth middleware is not defined}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8000"

  paperless-gotenberg:
    container_name: ${COMPOSE_PROJECT_NAME}-gotenberg
    image: docker.io/gotenberg/gotenberg:${PAPERLESS_GOTENBERG_TAG:-7.10}
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - default

  paperless-tika:
    container_name: ${COMPOSE_PROJECT_NAME}-tika
    image: ghcr.io/paperless-ngx/tika:${PAPERLESS_TIKA_TAG:-latest}
    restart: unless-stopped
    networks:
      - default

networks:
  default:
    internal: true
  exposed:
    external: true
  proxy:
    external: true

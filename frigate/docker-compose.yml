name: frigate

services:

  frigate:
    image: ghcr.io/blakeblackshear/frigate:${FRIGATE_TAG:-stable}
    extends:
      file: ../fragments/services.yml
      service: service-main-web-glb
    hostname: ${COMPOSE_PROJECT_NAME}
    privileged: true
    shm_size: ${FRIGATE_SHM_SIZE:-64mb} # https://docs.frigate.video/frigate/installation#calculating-required-shm-size
    group_add:
      - "${RENDER_GROUP:?Host render group ID missing}"
    cap_add:
      - CAP_PERFMON
    devices:
      - ${CORAL_DEV:-/dev/apex_0}:/dev/apex_0 # Passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
      - ${GPU_DEV:-/dev/dri/renderD128}:${GPU_DEV:-/dev/dri/renderD128} # For hwaccel
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PROJECT_CONF_DIR:-${CONF_DIR:-/etc}/${COMPOSE_PROJECT_NAME}}:/config
      - ${FRIGATE_MEDIA_DIR:?No media directory set}:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    environment:
      - FRIGATE_RTSP_PASSWORD
    networks:
      - exposed
      - smarthome
      - mqtt
    ports:
      - 5000:5000

    labels:
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=5000"

      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.rule=Host(`${COMPOSE_PROJECT_NAME}-api.${NETWORK_DOMAIN}`) || Host(`${COMPOSE_PROJECT_NAME}-api.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.service=${COMPOSE_PROJECT_NAME}-api"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-api.loadbalancer.server.port=1984"

      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-rtsp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-rtsp.service=${COMPOSE_PROJECT_NAME}-rtsp"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-rtsp.entrypoints=rtsp"
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}-rtsp.loadbalancer.server.port=8554"

      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-webrtc-over-tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-webrtc-over-tcp.service=${COMPOSE_PROJECT_NAME}-webrtc-over-tcp"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-webrtc-over-tcp.entrypoints=webrtc-over-tcp"
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}-webrtc-over-tcp.loadbalancer.server.port=8555"

      - "traefik.udp.routers.${COMPOSE_PROJECT_NAME}-webrtc-over-udp.service=${COMPOSE_PROJECT_NAME}-webrtc-over-udp"
      - "traefik.udp.routers.${COMPOSE_PROJECT_NAME}-webrtc-over-udp.entrypoints=webrtc-over-udp"
      - "traefik.udp.services.${COMPOSE_PROJECT_NAME}-webrtc-over-udp.loadbalancer.server.port=8555"

networks:
  exposed:
    external: true
  proxy:
    external: true
  smarthome:
    external: true
  mqtt:
    external: true

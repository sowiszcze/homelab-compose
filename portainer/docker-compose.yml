name: portainer

services:

  agent:
    image: portainer/agent:${PORTAINER_AGENT_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}-agent
    networks: &portainer-networks
      - default
      - exposed
      - proxy
    ports:
      - 9001:9001
    environment: &portainer-environment
      - NETWORK_DOMAIN
      - MACHINE_DOMAIN
      - COMPOSE_DOMAIN
      - CERT_RESOLVER
      - AUTH_MIDDLEWARE
      - DOCKER_BRIDGE_GATEWAY
      - DEFAULT_PROXY
      - DOCKER_MANAGER
      - SCALE_DOMAIN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.rule=Host(`${COMPOSE_PROJECT_NAME}-api.${MACHINE_DOMAIN:?Machine FQDN missing}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.service=${COMPOSE_PROJECT_NAME}-api"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-api.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-api.loadbalancer.server.port=9001"

  server:
    image: portainer/portainer-ce:${PORTAINER_SERVER_TAG:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}-server
    networks: *portainer-networks
    ports:
      - 9000:9000
    environment: *portainer-environment
    extra_hosts:
      host.docker.internal: ${PORTAINER_DOCKER_ROUTER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/${COMPOSE_PROJECT_NAME}:/data
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=9000"

networks:
  default:
    internal: true
  proxy:
    external: true
  exposed:
    external: true

version: '3.9'
name: arr

services:

  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr:${JELLYSEERR_TAG:-latest}
    volumes:
      - /etc/jellyseerr:/config
      - /stockpile:/data/media
      - /cabinet/download:/data/download
    restart: unless-stopped
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
    networks:
      - default
      - exposed
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellseerr.rule=Host(`jellseerr.${NETWORK_DOMAIN:?Netowrk domain is not defined}`) || Host(`jellseerr.${MACHINE_DOMAIN:?Machine domain is not defined}`)"
      - "traefik.http.routers.jellseerr.tls=true"
      - "traefik.http.routers.jellseerr.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.jellseerr.service=jellseerr"
      - "traefik.http.routers.jellseerr.entrypoints=http,https"
      - "traefik.http.services.jellseerr.loadbalancer.server.port=5055"

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:${RADARR_TAG:-latest}
    volumes:
      - /etc/radarr:/config
      - /stockpile:/data/media
      - /cabinet/download:/data/download
    restart: unless-stopped
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
    networks:
      - default
      - exposed
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${NETWORK_DOMAIN}`) || Host(`radarr.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.radarr.service=radarr"
      - "traefik.http.routers.radarr.entrypoints=http,https"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:${SONDARR_TAG:-latest}
    volumes:
      - /etc/sonarr:/config
      - /stockpile:/data/media
      - /cabinet/download:/data/download
    restart: unless-stopped
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
    networks:
      - default
      - exposed
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${NETWORK_DOMAIN}`) || Host(`sonarr.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.sonarr.service=sonarr"
      - "traefik.http.routers.sonarr.entrypoints=http,https"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  prowlarr:
    image: ghcr.io/hotio/prowlarr:${PROWLARR_TAG:-latest}
    container_name: prowlarr
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
    networks:
      - default
      - exposed
      - proxy
    volumes:
      - /etc/prowlarr:/config
      - /stockpile:/data/media
      - /cabinet/download:/data/download
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${NETWORK_DOMAIN}`) || Host(`prowlarr.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.prowlarr.service=prowlarr"
      - "traefik.http.routers.prowlarr.entrypoints=http,https"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  jackett:
    image: ghcr.io/hotio/jackett:${JACKETT_TAG:-latest}
    container_name: jackett
    environment:
      - PUID=${UID:-1000}
      - PGID=${GID:-1000}
    networks:
      - default
      - exposed
      - proxy
    volumes:
      - /etc/jackett:/config
      - /stockpile:/data/media
      - /cabinet/download:/data/download
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${NETWORK_DOMAIN}`) || Host(`jackett.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.jackett.service=jackett"
      - "traefik.http.routers.jackett.entrypoints=http,https"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:${FLARESOLVERR_TAG:-latest}
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ
    networks:
      - default
      - exposed
      - proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.${NETWORK_DOMAIN}`) || Host(`flaresolverr.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.flaresolverr.tls=true"
      - "traefik.http.routers.flaresolverr.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.flaresolverr.service=flaresolverr"
      - "traefik.http.routers.flaresolverr.entrypoints=http,https"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"

networks:
  default:
  exposed:
    external: true
  proxy:
    external: true

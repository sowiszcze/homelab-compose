name: linkwarden

services:

  linkwarden:
    container_name: ${COMPOSE_PROJECT_NAME}
    image: ghcr.io/linkwarden/linkwarden:${LINKWARDEN_TAG:-latest}
    restart: unless-stopped
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/data:/data/data
    env_file: stack.env
    depends_on:
      - postgres
    networks:
      - default
      - exposed
      - proxy
      - s3
      - smtp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose domain is not defined}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=3000"

  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres:${LINKWARDEN_DB_TAG:-16-alpine}
    env_file: stack.env
    restart: unless-stopped
    networks:
      - default
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/db:/var/lib/postgresql/data

networks:
  default:
    internal: true
  exposed:
    external: true
  proxy:
    external: true
  s3:
    external: true
  smtp:
    external: true

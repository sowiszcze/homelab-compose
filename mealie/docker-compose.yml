name: mealie

services:

  mealie:
    container_name: ${COMPOSE_PROJECT_NAME}
    image: ghcr.io/mealie-recipes/mealie:${MEALIE_TAG:-latest}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1000M
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/data:/app/data
    env_file: stack.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default
      - exposed
      - proxy
      - smtp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose domain is not defined}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=9000"

  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres:${MEALIE_POSTGRES_TAG:-15-alpine}
    env_file: stack.env
    restart: unless-stopped
    networks:
      - default
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/db:/var/lib/postgresql/data

networks:
  default:
    internal: true
  exposed:
    external: true
  proxy:
    external: true
  smtp:
    external: true

name: adguardhome

services:

  dhcprelay:
    image: modem7/dhcprelay:${ADGUARDHOME_DHCPRELAY_TAG:-latest}
    container_name: dhcprelay
    command: ["-d", "-i", "eno1", "-i", "br_adguard", "${PRIMARY_DNS:?Primary DNS IP has to be defined}"]
    cap_add:
      - NET_ADMIN
    network_mode: host
    restart: always
    depends_on:
      - adguardhome
    mem_limit: 32m
    mem_reservation: 8m

  adguardhome:
    container_name: ${COMPOSE_PROJECT_NAME}
    hostname: ${COMPOSE_PROJECT_NAME}
    image: adguard/adguardhome:${ADGUARDHOME_TAG:-latest}
    volumes:
      - /etc/${COMPOSE_PROJECT_NAME}:/opt/adguardhome/conf
      - /srv/${COMPOSE_PROJECT_NAME}:/opt/adguardhome/work
      - ${LETSENCRYPT_DIR:-/etc/letsencrypt}:/etc/letsencrypt:ro
    ports:
      - ${ADGUARDHOME_PORT:-3000}:3000/tcp # Web UI
    restart: always
    privileged: true
    networks:
      default:
        ipv4_address: ${PRIMARY_DNS}
      proxy:
      exposed:
    dns:
      - 127.0.0.1
      - ${FALLBACK_DNS:?Fallback DNS has to be defined}
      - 1.1.1.1
      - 1.0.0.1
      - 9.9.9.9
    labels:
      - "traefik.enable=true"
      # Admin panel
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose domain is not defined}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=3000"
      # DNS-over-HTTPS
      - "traefik.http.routers.dns-over-https.rule=Headers(`accept`, `application/dns-json`) || Host(`dns.${COMPOSE_DOMAIN}`)"
      - "traefik.http.routers.dns-over-https.tls=true"
      - "traefik.http.routers.dns-over-https.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.dns-over-https.service=dns-over-https"
      - "traefik.http.routers.dns-over-https.entrypoints=http,https"
      - "traefik.http.services.dns-over-https.loadbalancer.server.port=443"
      - "traefik.http.services.dns-over-https.loadbalancer.server.scheme=https"
      # Plain DNS (TCP)
      - "traefik.tcp.routers.dns-tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.dns-tcp.service=dns-tcp"
      - "traefik.tcp.routers.dns-tcp.entrypoints=dns-tcp"
      - "traefik.tcp.services.dns-tcp.loadbalancer.server.port=53"
      # Plain DNS (UDP)
      - "traefik.udp.routers.dns-udp.service=dns-udp"
      - "traefik.udp.routers.dns-udp.entrypoints=dns-udp"
      - "traefik.udp.services.dns-udp.loadbalancer.server.port=53"
      # DNS-over-TLS
      - "traefik.tcp.routers.dns-over-tls.rule=HostSNI(`dns.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.dns-over-tls.tls=true"
      - "traefik.http.routers.dns-over-tls.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.dns-over-tls.service=dns-over-tls"
      - "traefik.tcp.routers.dns-over-tls.entrypoints=dns-over-tls"
      - "traefik.tcp.services.dns-over-tls.loadbalancer.server.port=853"
      # DNS-over-QUIC
      - "traefik.udp.routers.dns-over-quic.service=dns-over-quic"
      - "traefik.udp.routers.dns-over-quic.entrypoints=dns-over-quic"
      - "traefik.udp.services.dns-over-quic.loadbalancer.server.port=853"
      # DNSCrypt (TCP)
      - "traefik.tcp.routers.dnscrypt-tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.dnscrypt-tcp.service=dnscrypt-tcp"
      - "traefik.tcp.routers.dnscrypt-tcp.entrypoints=dnscrypt-tcp"
      - "traefik.tcp.services.dnscrypt-tcp.loadbalancer.server.port=5443"
      # DNSCrypt (UDP)
      - "traefik.udp.routers.dnscrypt-udp.service=dnscrypt-udp"
      - "traefik.udp.routers.dnscrypt-udp.entrypoints=dnscrypt-udp"
      - "traefik.udp.services.dnscrypt-udp.loadbalancer.server.port=5443"

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_adguard
    ipam:
      config:
        - subnet: ${PRIMARY_DNS_SUBNET:?Subnet for primary DNS has to be defined}
  proxy:
    external: true
  exposed:
    external: true

name: adguardhome

services:

  dhcprelay:
    image: modem7/dhcprelay:${ADGUARDHOME_DHCPRELAY_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: stub-healthcheck
    container_name: dhcprelay
    command: ["-d", "-i", "eno1", "-i", "br_adguard", "${PRIMARY_DNS:?Primary DNS IP has to be defined}"]
    cap_add:
      - NET_ADMIN
    network_mode: host
    restart: always
    healthcheck:
      test: 'netstat -lun | grep -iqEe "^udp\s+\0+\s+\0+\s+[:\.\0A-F]+:53\s+" || exit 1'
    depends_on:
      adguardhome:
        condition: service_healthy
    mem_limit: 32m
    mem_reservation: 8m

  adguardhome:
    image: adguard/adguardhome:${ADGUARDHOME_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-main-web-glb-hc
    hostname: ${COMPOSE_PROJECT_NAME}
    volumes:
      - ${ADGRUARDHOME_CONF_PATH:-${CONF_PATH:-/etc}/${COMPOSE_PROJECT_NAME}}:/opt/adguardhome/conf
      - ${ADGRUARDHOME_DATA_PATH:-${DATA_PATH:-/srv}/${COMPOSE_PROJECT_NAME}}:/opt/adguardhome/work
      - ${LETSENCRYPT_DIR:-/etc/letsencrypt}:/etc/letsencrypt:ro
    ports:
      - ${ADGUARDHOME_PORT:-3000}:3000/tcp # Web UI
    restart: always
    healthcheck:
      test: 'wget -q --spider --proxy=off localhost:3000 2>/dev/null || exit 1'
    privileged: true
    networks:
      default:
        ipv4_address: ${PRIMARY_DNS}
      proxy:
      exposed:
    dns:
      - 127.0.0.1
      - ${FALLBACK_DNS:?Fallback DNS has to be defined}
      - 1.1.1.1
      - 1.0.0.1
      - 9.9.9.9
    labels:
      # Admin panel
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=3000"
      # DNS-over-HTTPS
      - "traefik.http.routers.dns-over-https.rule=Header(`accept`, `application/dns-json`) || Host(`dns.${COMPOSE_DOMAIN}`)"
      - "traefik.http.routers.dns-over-https.service=dns-over-https"
      - "traefik.http.routers.dns-over-https.entrypoints=http,https"
      - "traefik.http.services.dns-over-https.loadbalancer.server.port=443"
      - "traefik.http.services.dns-over-https.loadbalancer.server.scheme=https"
      # Plain DNS (TCP)
      - "traefik.tcp.routers.dns-tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.dns-tcp.service=dns-tcp"
      - "traefik.tcp.routers.dns-tcp.entrypoints=dns-tcp"
      - "traefik.tcp.services.dns-tcp.loadbalancer.server.port=53"
      # Plain DNS (UDP)
      - "traefik.udp.routers.dns-udp.service=dns-udp"
      - "traefik.udp.routers.dns-udp.entrypoints=dns-udp"
      - "traefik.udp.services.dns-udp.loadbalancer.server.port=53"
      # DNS-over-TLS
      - "traefik.tcp.routers.dns-over-tls.rule=HostSNI(`dns.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.dns-over-tls.tls=true"
      - "traefik.tcp.routers.dns-over-tls.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.dns-over-tls.service=dns-over-tls"
      - "traefik.tcp.routers.dns-over-tls.entrypoints=dns-over-tls"
      - "traefik.tcp.services.dns-over-tls.loadbalancer.server.port=853"
      # DNS-over-QUIC
      - "traefik.udp.routers.dns-over-quic.service=dns-over-quic"
      - "traefik.udp.routers.dns-over-quic.entrypoints=dns-over-quic"
      - "traefik.udp.services.dns-over-quic.loadbalancer.server.port=853"
      # DNSCrypt (TCP)
      - "traefik.tcp.routers.dnscrypt-tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.dnscrypt-tcp.service=dnscrypt-tcp"
      - "traefik.tcp.routers.dnscrypt-tcp.entrypoints=dnscrypt-tcp"
      - "traefik.tcp.services.dnscrypt-tcp.loadbalancer.server.port=5443"
      # DNSCrypt (UDP)
      - "traefik.udp.routers.dnscrypt-udp.service=dnscrypt-udp"
      - "traefik.udp.routers.dnscrypt-udp.entrypoints=dnscrypt-udp"
      - "traefik.udp.services.dnscrypt-udp.loadbalancer.server.port=5443"

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_adguard
    ipam:
      config:
        - subnet: ${PRIMARY_DNS_SUBNET:?Subnet for primary DNS has to be defined}
  proxy:
    external: true
  exposed:
    external: true

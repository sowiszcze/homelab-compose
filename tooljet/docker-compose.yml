name: tooljet

services:

  tooljet:
    tty: true
    stdin_open: true
    container_name: ${COMPOSE_PROJECT_NAME}
    image: tooljet/tooljet:${TOOLJET_TAG:-latest}
    volumes:
      - /etc/${COMPOSE_PROJECT_NAME}:/etc/headscale
      - /srv/${COMPOSE_PROJECT_NAME}:/srv/headscale
    restart: unless-stopped
    env_file: stack.env
    environment:
      SERVE_CLIENT: "true"
      PORT: "80"
    command: npm run start:prod
    depends_on:
      - tooljet-postgrest
      - tooljet-kv
    networks:
      - default
      - exposed
      - proxy
      - smtp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN}`, `${COMPOSE_PROJECT_NAME}.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"

  tooljet-postgrest:
    container_name: ${COMPOSE_PROJECT_NAME}-postgrest
    image: postgrest/postgrest:${TOOLJET_POSTGREST_TAG:-latest}
    restart: always
    env_file: stack.env
    environment:
      PGRST_SERVER_PORT: "80"
    depends_on:
      - tooljet-db
    networks:
      - default

  tooljet-db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres:${TOOLJET_DB_TAG:-latest}
    restart: unless-stopped
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${TOOLJET_DB_NAME:-tooljet}
      POSTGRES_USER: ${TOOLJET_DB_USER:-tooljet}
      POSTGRES_PASSWORD: ${TOOLJET_DB_PASS:?Tooljet database password not set}
    networks:
      - default

  tooljet-kv:
    container_name: ${COMPOSE_PROJECT_NAME}-kv
    image: registry.redict.io/redict:${TOOLJET_KV_TAG:-latest}
    restart: unless-stopped
    env_file: stack.env

networks:
  default:
  exposed:
    external: true
  proxy:
    external: true
  smtp:
    external: true

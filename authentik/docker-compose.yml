name: authentik

services:

  authentik-db:
    extends:
      file: ../fragments/services.yml
      service: postgres

  authentik-kv:
    extends:
      file: ../fragments/services.yml
      service: valkey-persistent

  authentik-server:
    container_name: ${COMPOSE_PROJECT_NAME}-server
    image: ghcr.io/goauthentik/server:${AUTHENTIK_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-sub-hc
    networks:
      - default
      - proxy
      - smtp
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: ${COMPOSE_PROJECT_NAME}-kv
      AUTHENTIK_POSTGRESQL__HOST: ${COMPOSE_PROJECT_NAME}-db
      AUTHENTIK_POSTGRESQL__USER: ${DB_USER:-${COMPOSE_PROJECT_NAME}}
      AUTHENTIK_POSTGRESQL__NAME: ${DB_NAME:-${COMPOSE_PROJECT_NAME}}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DB_PASS}
    volumes:
      - ${PROJECT_DATA_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}}/media:/media
      - ${PROJECT_DATA_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}}/custom-templates:/templates
    env_file:
      - stack.env
    depends_on:
      authentik-db:
        condition: service_healthy
      authentik-kv:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=${DOMAIN_OVERRIDE:+Host(`${DOMAIN_OVERRIDE}`) || }Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose FQDN missing}`)${AUTHENTIK_HOST_RULE:+ || ${AUTHENTIK_HOST_RULE}}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=${AUTHENTIK_CORS_MIDDLEWARE:-cors-allow-all@file}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=9000"

  authentik-worker:
    container_name: ${COMPOSE_PROJECT_NAME}-worker
    image: ghcr.io/goauthentik/server:${AUTHENTIK_TAG:-latest}
    extends:
      file: ../fragments/services.yml
      service: service-sub-hc
    networks:
      - default
      - smtp
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: ${COMPOSE_PROJECT_NAME}-kv
      AUTHENTIK_POSTGRESQL__HOST: ${COMPOSE_PROJECT_NAME}-db
      AUTHENTIK_POSTGRESQL__USER: ${DB_USER:-${COMPOSE_PROJECT_NAME}}
      AUTHENTIK_POSTGRESQL__NAME: ${DB_NAME:-${COMPOSE_PROJECT_NAME}}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DB_PASS}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PROJECT_DATA_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}}/media:/media
      - ${PROJECT_DATA_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}}/certs:/certs
      - ${PROJECT_DATA_DIR:-${DATA_DIR:-/srv}/${COMPOSE_PROJECT_NAME}}/custom-templates:/templates
    env_file:
      - stack.env
    depends_on:
      authentik-db:
        condition: service_healthy
      authentik-kv:
        condition: service_healthy

networks:
  default:
    internal: true
  smtp:
    external: true
  proxy:
    external: true
